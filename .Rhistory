setwd("C:/Users/Lawrence/GitHub/Firmographics")
?read.csv
read.csv('ULTIMATE_WORK_UP.csv', nrows = 10)
df <- read.csv('ULTIMATE_WORK_UP.csv', nrows = 10)
rnames(df)
names(df)
rown(df)
rnum(df)
?rown
?colnum
??row names
rownames(df)
colnames(df)
?gsub
gsub(df, df3)
data()
tables()
table()
??read.csv
df$Client_Source.ID
df$Client_Source_ID
df$Client_Source
df$Client_Cluster_ID
df2 <- read.csv('SS_IG_Data_Appended_03192015.csv', nrows=10)
colnames(df2)
df2
colnames(df2)
df
colnames(df)
colnames(df2)
df1 <- df
rm(df)
ls()
source('C:/Users/Lawrence/GitHub/Firmographics/load.R')
source('C:/Users/Lawrence/GitHub/Firmographics/load.R')
rm(df1, df2)
source('C:/Users/Lawrence/GitHub/Firmographics/load.R')
rm(df)
rm(UltimateWorkUp)
df <- read.csv('SS_IG_Data_Appended_03192015.csv')
ultimate.wu <- ultimate
ultimate <- read.csv('SS_IG_Ultimate_Data.csv')
summary(ultimate)
ultimate <- read.csv('SS_IG_Ultimate_Data.csv', colClasses = 'character')
read.csv(filename, nrows)
read.csv(filename, nrows)
source('C:/Users/Lawrence/GitHub/Firmographics/checkColClasses.R')
checkColClasses('SS_IG_Ultimate_Data.csv')
source('C:/Users/Lawrence/GitHub/Firmographics/checkColClasses.R')
source('C:/Users/Lawrence/GitHub/Firmographics/checkColClasses.R')
checkColClasses('SS_IG_Ultimate_Data.csv')
df2 = checkColClasses('SS_IG_Ultimate_Data.csv')
classes(df)
class(df)
class(df[1,])
df[1,]
class(df[1,])
class(df[,1])
vapply(df[1,], class)
vapply(df[1], class)
df[1]
df2[1]
df2[,1]
df2[1,]
as.vector(df2[1,])
class(as.vector(df2[1,]))
sapply(as.vector(df2[1,]), class)
vapply(as.vector(df2[1,]), class)
class(sapply(as.vector(df2[1,]), class))
class(sapply(df2[1,]), class))
class(sapply(df2[1,]), class)
sapply(df2[1,]), class)
sapply(df2[1,], class)
class(sapply(df2[1,], class))
v <- sapply(df2[1,], class)
v
length9v
length(v)
?vapply
class(vapply(df2[1,], 'character', class))
class(vapply(df2[1,], c('character'), class))
getColClasses  <- function(filename, nrows = 10) {
source('C:/Users/Lawrence/GitHub/Firmographics/checkColClasses.R')
rm(checkColClasses)
getColClasses('SS_IG_Ultimate_Data.csv')
colClasses <- getColClasses('SS_IG_Ultimate_Data.csv')
ls
ls()
rm(v)
df2
colClasses
class(colClasses)
colClasses[1]
length[colClasses]
length(colClasses)
colnames(colClasses)
colnames(colClasses)
names(colClasses)
names[MATCH.SCORE]
names['MATCH.SCORE']
colClasses['MATCH.SCORE']
colClasses['PHONE']
as.vector(ColClasses)
as.vector(colClasses)
source('C:/Users/Lawrence/GitHub/Firmographics/getColClasses.R')
colClasses <- getColClasses('SS_IG_Ultimate_Data.csv')
colClasses
source('C:/Users/Lawrence/GitHub/Firmographics/getColClasses.R')
colClasses <- getColClasses('SS_IG_Ultimate_Data.csv')
colClasses
names(colClasses)  <- NULL
colClasses
rm(colClasses)
rm(df2)
ultimate.workup <- ultimate.wu
rm(ultimate.wu)
int
ultimate.workup$PHONE[10]
ultimate.workup$PHONE[10,]
ultimate.workup$PHONE[1:10]
ultimate$PHONE[1:10]
ultimate$PHONE
class(ultimate$PHONE)
class(ultimate.workup$PHONE)
ultimate.workup$PHONE
class(ultimate$PHONE)
as.integer(ultimate$PHONE)
any(is.na(ultimate.workup$PHONE))
any(ultimate.workup$PHONE < 1)
sapply(ultimate$PHONE, as.integer)
ultimate$PHONE <- as.integer(ultimate$PHONE)
ultimate <- read.csv('SS_IG_Ultimate_Data.csv')
ultimate$PHONE <- as.integer(ultimate$PHONE)
ultimate.workup$PHONE <- as.integer(ultimate.workup$PHONE)
ultimate <- read.csv('SS_IG_Ultimate_Data.csv')
ultimate$PHONE <- as.numeric(ultimate$PHONE)
ultimate.workup <- read.csv('ULTIMATE_WORK_UP.csv')
filelist <- list.files(pattern = '.csv$', full.names = T)
filelist
View(df)
View(ultimate.workup)
?match
colnames(df)
colnames(df) %in% colnames(ultimate.workup)
workup <- ultimate.workup
rm(ultimate.workup)
colnames(ultimate) %in% colnames(workup)
names(ultimate[, 1]
)
colnames(ultimate)[1]
ultimate[1]
dimnames(ultimate)
dimnames(df)
dimnames(df)
dimnames(workup)
dimnames(ultimate)
dimnames(df)[2]
head(ultimate$ULTIMATE_PARENT_NUM)
head(c(ultimate$ULTIMATE_PARENT_NUM_JS, ultimate$ULTIMATE_PARENT_NUM))
head(ultimate$ULTIMATE_PARENT_NUM_JS)
head(ultimate$ULTIMATE_PARENT_NUM)
head(df[, c(COMMON_CLIENT_ID_SS, ULTIMATE_PARENT_NUM))
head(df[, c(COMMON_CLIENT_ID_SS, ULTIMATE_PARENT_NUM)])
head(df[, c(COMMON_CLIENT_ID_SS, ULTIMATE_PARENT_NUM)])
head(df[, c(df$COMMON_CLIENT_ID_SS, df$ULTIMATE_PARENT_NUM)])
head(df[, c('COMMON_CLIENT_ID_SS', 'ULTIMATE_PARENT_NUM)])
)
head(df[, c('COMMON_CLIENT_ID_SS', 'ULTIMATE_PARENT_NUM')])
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUM')])
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUMBER')])
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUMBER')], 25)
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUMBER', 'ULTIMATE_PARENT_NUM')], 25)
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUMBER', 'SUBSIDIARY_NUMBER','ULTIMATE_PARENT_NUM')], 25)
head(df[, c('COMMON_CLIENT_ID_SS', 'LOCATION_NUMBER', 'SUBSIDIARY_NUMBER','ULTIMATE_PARENT_NUM')], 25)
isNA <- is.na(df$LOCATION_NUMBER)
length(!isNA)
length(isNA == F)
length(df[isNA == F,])
length(df[isNA == T,])
isNA
isNA <- which(is.na(df$LOCATION_NUMBER))
df$LOCATION_NUMBER[isNA]
isNotNA <- which(!is.na(df$LOCATION_NUMBER))
head(workup$LOCATION_NUMBER, 25)
any(workup$LOCATION_NUMBER)
any(is.na(workup$LOCATION_NUMBER))
summary(workup$LOCATION_NUMBER)
workup <- read.csv(filelist[3])
summary(df$LOCATION_NUMBER)
37180-11274
ultimate$ULTIMATE_PARENT_NUM_JS
ultimate$ULTIMATE_PARENT_NUM
search()
summary(df)
summary(df$ULTIMATE_PARENT_NUM)
37180-27806
ultimateIsNotNA <- which(!is.na(df$ULTIMATE_PARENT_NUM))
locationNumisNotNA <- which(!is.na(df$LOCATION_NUMBER))
locationNumIsNotNA <- which(!is.na(df$LOCATION_NUMBER))
rm(locationNumisNotNA)
ultimate#IsNotNA <- which(!is.na(df$ULTIMATE_PARENT_NUM))
ultimateNumIsNotNA <- which(!is.na(df$ULTIMATE_PARENT_NUM))
rm(isNA)
rm(isNotNANA)
rm(isNotNA)
rm(ultimateIsNotNA)
df$SUBSIDIARY_NUMBER
which(!is.na(df$SUBSIDIARY_NUMBER))
hasSubsidiary <- which(!is.na(df$SUBSIDIARY_NUMBER))
is.na(df$COMMON_CLIENT_ID_SS)
any(is.na(df$COMMON_CLIENT_ID_SS))
any(is.na(df$COMMON_CLIENT_ID_SS[locationNumIsNotNA]))
df$COMMON_CLIENT_ID_SS[locationNumIsNotNA]
unique(df$LOCATION_NUMBER[locationNumIsNotNA])
length(unique(df$LOCATION_NUMBER[locationNumIsNotNA]))
??unique
search()
??unique
unique(df$LOCATION_NUMBER[locationNumIsNotNA])
length(unique(df$LOCATION_NUMBER[locationNumIsNotNA]))
isUnique <- unique(df$LOCATION_NUMBER)
isUnique <- unique(df$LOCATION_NUMBER, na.rm=T)
isUnique <- unique(df$LOCATION_NUMBER, rm.na=T)
isUnique <- unique(df$LOCATION_NUMBER[locationNumIsNotNA])
?duplicated
getDups <- function(df, col = 1) {
# df is a data frame
# col is the column number used to check for duplicates
isDup <- duplicated(df[, col])
dups <- df[, col] %in% df[isDup, col]
dups <- df[dups, ]
dups <- dups[order(dups[, col]), ]
}
colnames(df) == 'LOCATION_NUMBER'
which(colnames(df) == 'LOCATION_NUMBER')
dups <- getDups(df, 14)
View(dups)
dups[dups$LOCATION_NUMBER == 81471, ]
dups[dups$LOCATION_NUMBER == 81471, 1:10]
dups[dups$LOCATION_NUMBER == '81471', 1:10]
dups[dups$LOCATION_NUMBER == 81471, 1]
heads(dups$LOCATION_NUMBER, 25)
head(dups$LOCATION_NUMBER, 25)
head(dups$LOCATION_NUMBER, 25) == 81471
dups[which(dups$LOCATION_NUMBER == 81471), 1]
dups[which(dups$LOCATION_NUMBER == 81471), 1:10]
dups[which(dups$LOCATION_NUMBER == 81471),]
dups[which(dups$LOCATION_NUMBER == 81471)]
dups[which(dups$LOCATION_NUMBER == 81471)]
dups[which(dups$LOCATION_NUMBER == 81471),]
dups[which(dups$LOCATION_NUMBER == 81471)]
dups[which(dups$LOCATION_NUMBER == 81471), ]
dups[which(dups$LOCATION_NUMBER == 81471), 'ULT']
dups[which(dups$LOCATION_NUMBER == 81471), $ULTI]
dups[which(dups$LOCATION_NUMBER == 81471), '$ULTI']
dups[which(dups$LOCATION_NUMBER == 81471), '^ULTI']
dups[which(dups$LOCATION_NUMBER == 81471), df$ULTIMATE_PARENT_NUM]
dups[which(dups$LOCATION_NUMBER == 81471), 'ULTIMATE_PARENT_NUM']
dups[which(dups$LOCATION_NUMBER == 113495451), 'ULTIMATE_PARENT_NUM']
View(dups)
View(dups)
??grep
colnames(df)
grep(colnames(df), '_SS')
sapply(colnames(df), grep, '_SS')
sapply(colnames(df), grep)
?match
colnames(df)[1] %in% '_SS'
colnames(df)[1] %in% '_SS^'
colnames(df)
??read.table
df <- read.csv(filelist[1], na.strings = '')
hasLocationNum <- which(!is.na(df$LOCATION_NUMBER)) #25906 obs.
hasUltimateNum <- which(!is.na(df$ULTIMATE_PARENT_NUM)) #9374 obs.
hasSubsidiary <- which(!is.na(df$SUBSIDIARY_NUMBER)) #5605 obs.
isUnique <- unique(df$LOCATION_NUMBER[locationNumIsNotNA])
dups <- getDups(df, 14) #col 14 is LOCATION_NUMBER
rm(locationNumIsNotNA, ultimateNumIsNotNA)
isUnique <- unique(df$LOCATION_NUMBER[hasLocationNum])
isUnique <- order(unique(df$LOCATION_NUMBER[hasLocationNum]))
rm(isUnique)
uniqueLoc <- order(unique(df$LOCATION_NUMBER[hasLocationNum]))
head(dups, 25)
dimname(df)
dimnames(df)
row.names(df)
dimnames(df)
summary(df$BLANK_FIEL_FIELD)
summary(df)
summary(df)
any(is.na(df[, 1]))
any(is.na(df[, 2]))
df[which(is.na(df[, 2])), 1:13]
df[which(is.na(df[, 2])), ]
summary(df$Source.ID_
summary(df$Source.ID)
sapply(colnames(df), grep, patter = '_SS')
sapply(colnames(df), grep, patter = '_SS')[1]
sapply(colnames(df), grep, patter = '_SS')[,1]
class(colnames[df])
class(colnames(df))
v <- colnames(df)
sapply(v, grep, patter = '_SS')[,1]
sapply(v, grep, patter = '_SS')
as.vector(sapply(v, grep, patter = '_SS'))
sapply(v, grep, patter = '_SS')[1]
sapply(v, grep, patter = '_SS')[[1]]
sapply(v, lgrep, patter = '_SS')[[1]]
sapply(v, grepl, patter = '_SS')[[1]]
sapply(v, grepl, patter = '_SS')
which(sapply(colnames(df), grepl, patter = '_SS'))
sapply(colnames(df), grepl, patter = '_SS')
as.vector(sapply(colnames(df), grepl, patter = '_SS'))
class(sapply(colnames(df), grepl, patter = '_SS'))
class(sapply(colnames(df), grepl, patter = '^_SS'))
sapply(colnames(df), grepl, patter = '^_SS')
sapply(colnames(df), grepl, patter = '_SS$')
rm(v)
View(ultimate)
?unique
uniq <- unique(df)
m(uniq)
rm(uniq)
hist(df$STATE_ABBR)
hist(factor(df$STATE_ABBR))
hist(df$LATIUDE)
hist(df$LATITUDE)
hist(df$STATE_CODE)
hist(df$MATCH.SCORE)
hist(df$MATCH.TYPE)
plot(df$MATH.TYPE, df$MATCH.SCORE)
c<- complete.cases(df$MATH.TYPE, df$MATCH.SCORE)
plot(df$MATH.TYPE[c], df$MATCH.SCORE[c])
c<- which(complete.cases(df$MATH.TYPE, df$MATCH.SCORE))
plot(df$MATH.TYPE[c], df$MATCH.SCORE[c])
plot(df$MATH.TYPE[1:10], df$MATCH.SCORE[1:10])
plot(df$MATH.TYPE[1], df$MATCH.SCORE[1])
plot(5, 5)
plot(seq(1, 5), 5)
plot(seq(from = 1, to = 100)), 5)
plot(seq(from = 1, to = 100), 5)
uniqueLoc <- order(unique(df$LOCATION_NUMBER[hasUltimateNum]))
uniqueLoc <- order(unique(df$LOCATION_NUMBER[hasLocationNum]))
colnames(df)[1:10]
colnames(df)[1:11]
colnames(df)[1:12]
df[1:10, c(1, 12)]
df[1:10, c(1, 12:12)]
df[1:10, c(1, 12:13)]
summary(df$Master_Surving_ID_SS)
summary(df$Master_Surving_ID_SS)
gl
?gl
?factor
df$SALES_VOLUME
levels(df$SALES_VOLUME)
length(levels(df$SALES_VOLUME))
rm(c)
length(which(!is.na(df$SALES_VOLUME)))
length(which(!is.na(df$LOCATION_NUMBER)))
T == T
T == F
F == f
F == F
salesvol <- is.na(df$SALES_VOLUME)
est_total_sales <- is.na(df$EST_TOTAL_SALES_VOL)
legnth(which(!salesvol))
length(which(!salesvol))
length(which(!est_total_sales))
summary(df$EST_TOTAL_SALES_VOL)
colnames(df)
